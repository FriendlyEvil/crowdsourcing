{
  "public_name": "Есть ли на картинке дорожный знак?",
  "public_description": "Посмотрите на картинку и определите есть ли на ней дорожный знак",
  "public_instructions": "Внимательно посмотрите на картинку. Если на картинке присутствует хотя бы один дорожный знак, то выберите &#34;Да&#34;. Если знаков нет, то выберите &#34;Нет&#34;.<div><br /></div><div><b>Например</b>, на этой картинке есть дорожные знаки и правильный ответ <b>ДА.</b></div><div><img src=\"https://tlk.s3.yandex.net/kdd2019/photos/c700939dc9f0222ffe32e1c5a8869f64.jpg\" alt=\"\" /><br /></div><div><br /></div><div>А вот на этой картинке нет ни одного знака. Правильный ответ <b>НЕТ</b>.</div><div><img src=\"https://tlk.s3.yandex.net/kdd2019/photos/c5591245f5607c7f861f2717045917ce.jpg\" alt=\"\" /><br /></div>",
  "task_spec": {
    "input_spec": {
      "image": {
        "type": "url",
        "hidden": false,
        "required": true
      }
    },
    "output_spec": {
      "result": {
        "type": "string",
        "hidden": false,
        "required": true
      }
    },
    "view_spec": {
      "type": "classic",
      "assets": {
        "style_urls": [],
        "script_urls": [
          "$TOLOKA_ASSETS/js/toloka-handlebars-templates.js"
        ]
      },
      "markup": "{{img src=image width=\"100%\" height=\"400px\"}}\n<h3>Есть ли дорожные знаки на картинке?</h3>\n{{field type=\"radio\" name=\"result\" value=\"OK\" label=\"Да\" hotkey=\"1\"}}\n{{field type=\"radio\" name=\"result\" value=\"BAD\" label=\"Нет\" hotkey=\"2\"}}\n{{field type=\"radio\" name=\"result\" value=\"404\" label=\"Ошибка загрузки\" hotkey=\"3\"}}\n<br>\n",
      "script": "exports.Task = extend(TolokaHandlebarsTask, function (options) {\n  TolokaHandlebarsTask.call(this, options);\n}, {\n  onRender: function() {\n    // DOM-элемент задания сформирован (доступен через #getDOMElement()) \n  },\n  onDestroy: function() {\n    // Задание завершено, можно освобождать (если были использованы) глобальные ресурсы\n  }\n});\n\nfunction extend(ParentClass, constructorFunction, prototypeHash) {\n  constructorFunction = constructorFunction || function () {};\n  prototypeHash = prototypeHash || {};\n  if (ParentClass) {\n    constructorFunction.prototype = Object.create(ParentClass.prototype);\n  }\n  for (var i in prototypeHash) {\n    constructorFunction.prototype[i] = prototypeHash[i];\n  }\n  return constructorFunction;\n}\n",
      "styles": "",
      "settings": {
        "showSkip": true,
        "showTimer": true,
        "showTitle": true,
        "showFinish": true,
        "showReward": true,
        "showSubmit": true,
        "showMessage": true,
        "showFullscreen": true,
        "showInstructions": true
      }
    }
  },
  "assignments_issuing_type": "AUTOMATED",
  "assignments_automerge_enabled": false
}